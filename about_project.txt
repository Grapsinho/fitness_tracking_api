

-- Users

    - Manage personal details, fitness goals, and metrics securely.
    - JWT-based authentication and role-based access control.

    Value: Enables tracking progress over time, such as weight changes or goal adjustments.

    We have two types of users 

        Regular Users:

            Can create and update their profiles.
            Access workout plans, exercises, and progress tracking features.
            Participate in leaderboards and challenges.
        
        Trainer Users:

            Can manage exercises, workout plans, and challenges.
            Have additional privileges like viewing analytics across all users.
            Responsible for moderating content and monitoring the system.
    
    !! The user needs to be registered to use this app.

    Registration and Login:
        Register New Users:

            Endpoint: POST /register/
            Input: Username, email, password, and optional profile details.
            Output: Success message.

        Login Existing Users:

            Endpoint: POST /login/
            Input: Username and password.
            Output: Access token (JWT).

        Password Management:
            Reset Password:

                Endpoint: POST /password-reset/
                Triggers an email with a reset link or code.
                
            Change Password:

                Endpoint: PUT /change-password/
                Requires current password for security.

        Update Profile:

            Endpoint: PUT /profile/
            Requires authentication.
            Allows users to update fields like weight, fitness goals, or profile pictures.

    დასაწყისისთვის ჯერ დავარეგისტრიროთ იუზერი რათქმაუნდა ყველა საჭირო ფიელდით

    დაგვჭირდება რომ ცალკე ფიელდი შევუქმნათ fitnessGoalს და ამის შემდეგ დავასრულოთ მოდელებზე მუშაობა და დავიწყოთ
    ტოკენის გასწორება

    ვითვალისწინებთ იმას რომ გვეყოლება ორი სახის იუზერი ერთი ის რომელსაც შესღუდული შესაძლებლობები ექნება და მეორე რომელსაც შეეძლება ბევრი რამე

    სერიალიზერებში უნდა დავამატო ვალიდატორი დაბადების თარიღისთვის



    DONE ვაწყობ უსერ მოდელს
    DONE ვაკეთებ ფერმიშენებს
    DONE ვაკეთებ სერიალიზერს რეგისტრაციისთვის
    DONE ვაკეთებ ვიუს რეგისტრაციისთვის
    DONE რეგისტრაციის დროს მინდა უკვე რო უსერის აუთენთიკაცია მოვახდინო, უსერს აქვს ტოკენები

    DONE გავასწორო ეს ის აუთენთიკატედ ფერმიშენი

    DONE ტოკენის რეფრეში
    DONE როცა იუზერი რეგისტრირდება ან ლოგინდება ორივე ტოკენი აქვს
    DONE ის რო უკვე დარეგისტრირებული ვერ დარეგისტრირდება ხელახლა ეგეც გვაქ
    DONE გვჭირდება ტოკენის როტაცია და ბლექლისტინგი ლოგაუთის დროს

    DONE ტროტლინგი გვაქ დასამატებელი

    DONE დავამატე მიდლევეარი რათა ტოკენი ავტომატურად დარეფრეშდეს და თუ რეფრეშ ტოკენი ინვალიდია მაშინ ლოგოუთი
    DONE შევასწორე ფერმიშენი IsNotAuthenticated

    გავაკეთო დოკუმენტაცია
    დავამატო პროფაილის აბდეითი

    Send Email Verification (Optional):

        Generate a one-time token (e.g., using Django's default_token_generator or a custom token).
    
    ესეიგი გასაკეთებელი დარჩა პაროლის შეცვლა, ეს მაღლა რაც დავწერე


    /////////////////////////////////////////////////
    outstanting ტოკენები უნდა წავშალო სანამ რამეს გავაკეთებ !!!!!!!!!!!!!!
    /////////////////////////////////////////////////

    //"email": "testuser@example2.com",
    //"password": "strongpassword123"