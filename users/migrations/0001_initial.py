# Generated by Django 5.1.4 on 2025-01-03 18:40

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('unique_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_trainer', models.BooleanField(blank=True, default=False, help_text='If you do not check this box, it is assumed that you are a regular user.', null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Men'), ('W', 'Woman')], default='M', max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(default='avatars/default-boy-avatar.jpg', upload_to='avatars/')),
                ('height', models.DecimalField(decimal_places=2, help_text='Height in meters (e.g., 1.75).', max_digits=4, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(2.5)])),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kilograms (e.g., 70.5).', max_digits=5, validators=[django.core.validators.MinValueValidator(2.0), django.core.validators.MaxValueValidator(300.0)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='FitnessGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('goal_type', models.CharField(choices=[('Weight Loss', 'Weight Loss'), ('Strength Building', 'Strength Building'), ('Cardiovascular Fitness', 'Cardiovascular Fitness'), ('Flexibility', 'Flexibility'), ('BodyBuilding', 'BodyBuilding')], max_length=35)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, help_text='Optional deadline for the goal', null=True)),
                ('description', models.TextField(blank=True, help_text='Additional details about the goal')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitness_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Fitness Goals',
            },
        ),
    ]
